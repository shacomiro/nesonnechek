spring:
  config:
    import:
      - application-domain-rds.yaml
      - application-domain-redis.yaml
  profiles:
    group:
      domains-prod:
        - domain-prod
        - domain-rds-prod
        - domain-redis-prod
      domains-dev:
        - domain-dev
        - domain-rds-dev
        - domain-redis-dev
        - domain-rds-debug
      domains-local:
        - domain-local
        - domain-rds-local
        - domain-redis-local
        - domain-rds-debug
---
spring:
  config:
    activate:
      on-profile: domain-prod
aws:
  s3:
    service-endpoint: ${prod-config.aws.s3.service-endpoint}
    key:
      access: ${prod-config.aws.s3.access-key}
      secret: ${prod-config.aws.s3.secret-key}
    region: ${prod-config.aws.s3.region}
    bucket: ${prod-config.aws.s3.bucket}
java-epub-generator:
  directory:
    content: ${prod-config.ebook.content-directory}
    ebook: ${prod-config.ebook.ebook-directory}
---
spring:
  config:
    activate:
      on-profile: domain-dev
aws:
  s3:
    service-endpoint: ${dev-config.aws.s3.service-endpoint}
    key:
      access: ${dev-config.aws.s3.access-key}
      secret: ${dev-config.aws.s3.secret-key}
    region: ${dev-config.aws.s3.region}
    bucket: ${dev-config.aws.s3.bucket}
java-epub-generator:
  directory:
    content: ${dev-config.ebook.content-directory}
    ebook: ${dev-config.ebook.ebook-directory}
---
spring:
  config:
    activate:
      on-profile: domain-local
aws:
  s3:
    port: 8033
    service-endpoint: http://127.0.0.1:8033
    key:
      access: null
      secret: null
    region: ap-northeast-2
    bucket: local-bucket
java-epub-generator:
  directory:
    content: ./files/local/content
    ebook: ./files/local/ebook
